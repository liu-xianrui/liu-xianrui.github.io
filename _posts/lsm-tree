LSM-Tree(Log-Structured Merge-Tree)是用来为那些长期具有很高记录更新(插入或删除)频率的文件来提供低成本的索引机制。LSM-Tree通过使用某种算法，该算法会对索引变更进行延迟及批量处理，并通过一种类似归并排序的方式联合使用一个基于内存的组件和一个或多个磁盘组件。在处理过程中，所有的索引值对于所有的查询来说都是可以通过内存组件或者某个磁盘组件来进行访问的(除了很短暂的加锁期外)。与传统方式比如B-树相比，该算法大大降低了磁盘磁臂的移动，同事也会提高那些使用传统方式进行插入时，磁盘此批开销(寻道+转动)远大于存储空间花费的情况的性价比。
但是对于那些需要立即响应的查找操作来说，某些情况，它会损失一些IO效率，因此LSM-Tree最适用于那些索引插入比查询操作更常见的情况，比如对于历史记录表和日志文件来说，就属于这种情况。

